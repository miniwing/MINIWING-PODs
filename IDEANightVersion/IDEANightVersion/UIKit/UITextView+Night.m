//
//  UITextView+Night.m
//  UITextView+Night
//
//  Copyright (c) 2015 Draveness. All rights reserved.
//
//  These files are generated by ruby script, if you want to modify code
//  in this file, you are supposed to update the ruby code, run it and
//  test it. And finally open a pull request.

#import "UITextView+Night.h"
#import "DKNightVersionManager.h"
#import <objc/runtime.h>

@interface UITextView ()

@property (nonatomic, strong) NSMutableDictionary<NSString *, DKPicker> *pickers;

@end

@implementation UITextView (Night)

- (DKColorPicker)textColorPicker {
   
   return objc_getAssociatedObject(self, @selector(textColorPicker));
}

- (void)setTextColorPicker:(DKColorPicker)aPicker {
   
   objc_setAssociatedObject(self, @selector(textColorPicker), aPicker, OBJC_ASSOCIATION_COPY_NONATOMIC);

   if (nil != aPicker) {
      
      self.textColor = aPicker(self.themeManager.themeVersion);
      [self.pickers setValue:[aPicker copy] forKey:@"setTextColor:"];

   } /* End if () */
   else {
      
      [self.pickers removeObjectForKey:@"setTextColor:"];
      
   } /* End else */
   
   return;
}

// Harry FIXED
- (void)night_updateColor {
      
   [self.pickers enumerateKeysAndObjectsUsingBlock:^(NSString * _Nonnull aSelector, DKPicker _Nonnull aPicker, BOOL * _Nonnull aStop) {

//      if ([aSelector isEqualToString:NSStringFromSelector(@selector(setBackgroundColor:))]) {
//
//         UIColor *stColor = ((DKColorPicker)aPicker)(self.themeManager.themeVersion);
//
//         [self setBackgroundColor:stColor];
//
//      }
//      else {
//
//         SEL stSEL      = NSSelectorFromString(aSelector);
//         id  stResult   = aPicker(self.themeManager.themeVersion);
//
//         [UIView animateWithDuration:DKNightVersionAnimationDuration
//                          animations:^{
//#pragma clang diagnostic push
//#pragma clang diagnostic ignored "-Warc-performSelector-leaks"
//            [self performSelector:stSEL withObject:stResult];
//#pragma clang diagnostic pop
//         }];
//
//      } /* End else */

      SEL stSEL      = NSSelectorFromString(aSelector);
      id  stResult   = aPicker(self.themeManager.themeVersion);

      [UIView animateWithDuration:DKNightVersionAnimationDuration
                       animations:^{
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Warc-performSelector-leaks"
         [self performSelector:stSEL withObject:stResult];
#pragma clang diagnostic pop
      }];

   }];

   if (self.themeManager.supportsKeyboard && [self.themeManager.themeVersion isEqualToString:DKThemeVersionNight]) {
      
#ifdef __IPHONE_7_0
      self.keyboardAppearance = UIKeyboardAppearanceDark;
#else
      self.keyboardAppearance = UIKeyboardAppearanceDefault;
#endif
   }
   else {
#ifdef __IPHONE_7_0
      self.keyboardAppearance = UIKeyboardAppearanceLight;
#else
      self.keyboardAppearance = UIKeyboardAppearanceDefault;
#endif
   }
   
   return;
}

@end
