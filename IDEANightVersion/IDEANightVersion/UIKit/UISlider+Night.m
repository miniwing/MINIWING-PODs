//
//  UISlider+Night.m
//  UISlider+Night
//
//  Copyright (c) 2015 Draveness. All rights reserved.
//
//  These files are generated by ruby script, if you want to modify code
//  in this file, you are supposed to update the ruby code, run it and
//  test it. And finally open a pull request.

#import "UISlider+Night.h"
#import "DKNightVersionManager.h"
#import <objc/runtime.h>

@interface UISlider ()

@property (nonatomic, strong) NSMutableDictionary<NSString *, DKColorPicker> *pickers;

@end

@implementation UISlider (Night)

- (DKColorPicker)minimumTrackTintColorPicker {
   
   return objc_getAssociatedObject(self, @selector(minimumTrackTintColorPicker));
}

- (void)setMinimumTrackTintColorPicker:(DKColorPicker)aPicker {
   
   objc_setAssociatedObject(self, @selector(minimumTrackTintColorPicker), aPicker, OBJC_ASSOCIATION_COPY_NONATOMIC);

   if (nil != aPicker) {
      
      self.minimumTrackTintColor = aPicker(self.themeManager.themeVersion);
      [self.pickers setValue:[aPicker copy] forKey:@"setMinimumTrackTintColor:"];

   } /* End if () */
   else {
      
      [self.pickers removeObjectForKey:@"setMinimumTrackTintColor:"];
      
   } /* End else */
   
   return;
}

- (DKColorPicker)maximumTrackTintColorPicker {
   
   return objc_getAssociatedObject(self, @selector(maximumTrackTintColorPicker));
}

- (void)setMaximumTrackTintColorPicker:(DKColorPicker)aPicker {
   
   objc_setAssociatedObject(self, @selector(maximumTrackTintColorPicker), aPicker, OBJC_ASSOCIATION_COPY_NONATOMIC);

   if (nil != aPicker) {
      
      self.maximumTrackTintColor = aPicker(self.themeManager.themeVersion);
      [self.pickers setValue:[aPicker copy] forKey:@"setMaximumTrackTintColor:"];
      
   } /* End if () */
   else {
      
      [self.pickers removeObjectForKey:@"setMaximumTrackTintColor:"];
      
   } /* End else */
   
   return;
}

- (DKColorPicker)thumbTintColorPicker {
   
   return objc_getAssociatedObject(self, @selector(thumbTintColorPicker));
}

- (void)setThumbTintColorPicker:(DKColorPicker)aPicker {
   
   objc_setAssociatedObject(self, @selector(thumbTintColorPicker), aPicker, OBJC_ASSOCIATION_COPY_NONATOMIC);

   if (nil != aPicker) {
      
      self.thumbTintColor = aPicker(self.themeManager.themeVersion);
      [self.pickers setValue:[aPicker copy] forKey:@"setThumbTintColor:"];

   } /* End if () */
   else {
      
      [self.pickers removeObjectForKey:@"setThumbTintColor:"];
      
   } /* End else */
   
   return;
}

@end
